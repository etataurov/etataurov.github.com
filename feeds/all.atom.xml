<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>My blog</title><link href="/" rel="alternate"></link><link href="/feeds/all.atom.xml" rel="self"></link><id>/</id><updated>2014-02-15T15:00:00+06:00</updated><entry><title>Ember Foundation Modal</title><link href="/ember-foundation-modal.html" rel="alternate"></link><updated>2014-02-15T15:00:00+06:00</updated><author><name>Evgeny Tataurov</name></author><id>tag:,2014-02-15:ember-foundation-modal.html</id><summary type="html">&lt;h2&gt;Overview&lt;/h2&gt;
&lt;p&gt;For my new idea I needed a pretty smart client-side app, so i decided to try some JavaScript MVC framework. I chosed &lt;strong&gt;EmberJS&lt;/strong&gt;, without much research, just because i heard of it, and it seemed powerful and easy. And for css framework i chosed &lt;strong&gt;Foundation&lt;/strong&gt;, because I already tried &lt;strong&gt;Bootstrap&lt;/strong&gt; and wanted something new.&lt;/p&gt;
&lt;h2&gt;Problem&lt;/h2&gt;
&lt;p&gt;My application needed many modal windows(I am not sure if it is bad or good practice, but I wanted them). I found in &lt;strong&gt;Foundation&lt;/strong&gt; documentation about modal windows, it was really easy to implement them, but i wanted to integrate them with Ember's routes, views and models.&lt;/p&gt;
&lt;h2&gt;Existing solutions&lt;/h2&gt;
&lt;p&gt;I found few links:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SO question &lt;a href="http://stackoverflow.com/questions/17396994/modal-popup-with-ember-1-0-rc6"&gt;http://stackoverflow.com/questions/17396994/modal-popup-with-ember-1-0-rc6&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Working example with &lt;strong&gt;Twitter Bootstrap&lt;/strong&gt;
&lt;a href="http://jsbin.com/onuHEMA/1/edit"&gt;http://jsbin.com/onuHEMA/1/edit&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Usable, but don't do what I want: no routes or model assosiations.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SO question &lt;a href="http://stackoverflow.com/questions/15972226/ember-js-rendering-outlet-as-a-modal-window"&gt;http://stackoverflow.com/questions/15972226/ember-js-rendering-outlet-as-a-modal-window&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Working example
&lt;a href="http://jsfiddle.net/vgvL4/11/"&gt;http://jsfiddle.net/vgvL4/11/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Great example, but I needed more Foundation integration.&lt;/p&gt;
&lt;h2&gt;My solution&lt;/h2&gt;
&lt;p&gt;Mostly based on previous examples, I came up with this
&lt;a class="jsbin-embed" href="http://emberjs.jsbin.com/cidow/2/embed?html,js,output"&gt;Ember Foundation modal example&lt;/a&gt;&lt;script src="http://static.jsbin.com/js/embed.js"&gt;&lt;/script&gt;&lt;/p&gt;
&lt;h2&gt;Questions?&lt;/h2&gt;
&lt;p&gt;Contact me &lt;a href="&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#116;&amp;#111;&amp;#58;&amp;#116;&amp;#97;&amp;#116;&amp;#97;&amp;#117;&amp;#114;&amp;#111;&amp;#102;&amp;#102;&amp;#64;&amp;#103;&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#46;&amp;#99;&amp;#111;&amp;#109;"&gt;&amp;#116;&amp;#97;&amp;#116;&amp;#97;&amp;#117;&amp;#114;&amp;#111;&amp;#102;&amp;#102;&amp;#64;&amp;#103;&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#46;&amp;#99;&amp;#111;&amp;#109;&lt;/a&gt;&lt;/p&gt;</summary></entry><entry><title>"Git SVN"</title><link href="/git-svn.html" rel="alternate"></link><updated>2012-11-30T15:49:00+06:00</updated><author><name>Evgeny Tataurov</name></author><id>tag:,2012-11-30:git-svn.html</id><summary type="html">&lt;p&gt;До работы в NAUMEN гитом я, можно сказать, не пользовался, svn-ом тем более. Со временем почувствовал уверенность в работе с гитом, уже легко делал коммиты, ребэйзы, мерджи. С svn-ом тоже пришлось столкнуться, так как некоторые вещи лежат в svn и переносить на git планов нет.&lt;br /&gt;
Но была найдена удобная утилита git-svn, которая позволяля гитовскими командами работать с svn репозиториями. Конечно с удаленными ветками работать, просто как в гите нельзя, но вот локальные ветки - самые обычные как в гите.&lt;br /&gt;
Одна небольшая проблема только в том, что svn, как я понимаю, не дружит с нелинейной историей, а я часто работаю одновременно в различных локальных ветках, а главная ветка в это время тоже обновляется. В документации git-svn не советуют пользоваться merge, а советуют сделать патчи для каждого коммита. И в таком случае если захочется смержить ветку с какой-то новой фичей с мастером, то необходимо сделать&lt;br /&gt;
&lt;strong&gt;Добавить все изменения из мастера в текущую ветку&lt;/strong&gt;&lt;br /&gt;
&lt;code&gt;git rebase master&lt;/code&gt;&lt;br /&gt;
&lt;strong&gt;Сформировать патчи для всех коммитов, которых нет в мастере&lt;/strong&gt;&lt;br /&gt;
&lt;code&gt;git format-patch master&lt;/code&gt;&lt;br /&gt;
&lt;strong&gt;Перейти в master&lt;/strong&gt;&lt;br /&gt;
&lt;code&gt;git checkout master&lt;/code&gt;&lt;br /&gt;
&lt;strong&gt;Применить нужные патчи&lt;/strong&gt;&lt;br /&gt;
Раньше я делал это вручную, т.е. для каждого патча делал команду&lt;br /&gt;
&lt;code&gt;git apply filename.patch&lt;/code&gt;&lt;br /&gt;
При этом все изменения не коммитятся, но становятся в состояние staged for commit и потом надо вручную коммитить.&lt;br /&gt;
Можно воспользоваться командой&lt;br /&gt;
&lt;code&gt;git am filename.patch&lt;/code&gt;&lt;br /&gt;
Но при этом дата коммита останется той, что была у коммита из которого сформирован это патч, что для линейной истории, которая нам нужна, совсем не хорошо.&lt;br /&gt;
&lt;code&gt;git am filename.patch  --ignore-date&lt;/code&gt;&lt;br /&gt;
Такая команда позвонил сразу коммитит изменения патча и игнорирует дату патча, ставит текущую дату.&lt;br /&gt;
С помощью следующей команды можно применить все патчи из текущей папки с игнорированием ошибок пробелов и с игнорированием даты&lt;br /&gt;
&lt;code&gt;git am *.patch  --ignore-date --ignore-whitespace --ignore-space-change&lt;/code&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Вот такой первый пост.&lt;/p&gt;</summary><category term="git"></category><category term="svn"></category><category term="naumen"></category></entry></feed>